ext.javaVersion = 1.7
ext.kafkaVersion = '0.8.2.1'

project.version = ext.kafkaVersion


task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task install << {}

task build << {}

build.dependsOn {
    tasks.getByPath(':core:build')
    tasks.getByPath(':metrics-reporter:build')
    tasks.getByPath(':influxdb-loader:build')
    tasks.getByPath(':metrics-agent:build')
}

allprojects {

    apply plugin: 'idea'

    plugins.withType(JavaPlugin).whenPluginAdded {

        version = rootProject.version
        sourceCompatibility = rootProject.javaVersion
        libsDirName = 'lib'

        if (!hasProperty('scalaVersion')) {
            ext.scalaVersion = '2.11.8'
        }

        if (scalaVersion.startsWith('2.10')) {
            ext.baseScalaVersion = '2.10'
        } else if (scalaVersion.startsWith('2.11')) {
            ext.baseScalaVersion = '2.11'
        } else {
            ext.baseScalaVersion = scalaVersion
        }

        configurations {
            provided
            compile.extendsFrom provided
        }

        repositories {
            mavenLocal()
            mavenCentral()
        }

        dependencies {
            provided group: 'org.apache.kafka', name: 'kafka_' + baseScalaVersion, version: rootProject.kafkaVersion
            compile group: 'org.slf4j', name:'slf4j-api', version:'1.7.6'
            compile group: 'org.slf4j', name:'slf4j-log4j12', version:'1.7.6'
            testCompile group: 'junit', name: 'junit', version: '4.+'
        }

        sourceSets {
            main {
                compileClasspath += [configurations.provided]
            }
        }

        idea {
            module {
                scopes.PROVIDED.plus += [configurations.provided]
            }
        }

        task tree << {
            configurations.compile.collect {
                println it
            }
        }


    }
}

